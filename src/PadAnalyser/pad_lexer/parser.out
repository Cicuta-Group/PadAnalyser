Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> range SEP expression
Rule 2     expression -> range
Rule 3     range -> rows cols
Rule 4     range -> rows
Rule 5     range -> cols
Rule 6     rows -> ROW
Rule 7     cols -> COL
Rule 8     rows -> LPAREN row_exp RPAREN
Rule 9     cols -> LPAREN col_exp RPAREN
Rule 10    row_exp -> ROW SEP row_exp
Rule 11    row_exp -> ROW RANGE ROW
Rule 12    col_exp -> COL SEP col_exp
Rule 13    col_exp -> COL RANGE COL
Rule 14    row_exp -> ROW
Rule 15    col_exp -> COL

Terminals, with rules where they appear

COL                  : 7 12 13 13 15
LPAREN               : 8 9
RANGE                : 11 13
ROW                  : 6 10 11 11 14
RPAREN               : 8 9
SEP                  : 1 10 12
error                : 

Nonterminals, with rules where they appear

col_exp              : 9 12
cols                 : 3 5
expression           : 1 0
range                : 1 2
row_exp              : 8 10
rows                 : 3 4

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . range SEP expression
    (2) expression -> . range
    (3) range -> . rows cols
    (4) range -> . rows
    (5) range -> . cols
    (6) rows -> . ROW
    (8) rows -> . LPAREN row_exp RPAREN
    (7) cols -> . COL
    (9) cols -> . LPAREN col_exp RPAREN

    ROW             shift and go to state 5
    LPAREN          shift and go to state 6
    COL             shift and go to state 7

    expression                     shift and go to state 1
    range                          shift and go to state 2
    rows                           shift and go to state 3
    cols                           shift and go to state 4

state 1

    (0) S' -> expression .



state 2

    (1) expression -> range . SEP expression
    (2) expression -> range .

    SEP             shift and go to state 8
    $end            reduce using rule 2 (expression -> range .)


state 3

    (3) range -> rows . cols
    (4) range -> rows .
    (7) cols -> . COL
    (9) cols -> . LPAREN col_exp RPAREN

    SEP             reduce using rule 4 (range -> rows .)
    $end            reduce using rule 4 (range -> rows .)
    COL             shift and go to state 7
    LPAREN          shift and go to state 10

    cols                           shift and go to state 9

state 4

    (5) range -> cols .

    SEP             reduce using rule 5 (range -> cols .)
    $end            reduce using rule 5 (range -> cols .)


state 5

    (6) rows -> ROW .

    COL             reduce using rule 6 (rows -> ROW .)
    LPAREN          reduce using rule 6 (rows -> ROW .)
    SEP             reduce using rule 6 (rows -> ROW .)
    $end            reduce using rule 6 (rows -> ROW .)


state 6

    (8) rows -> LPAREN . row_exp RPAREN
    (9) cols -> LPAREN . col_exp RPAREN
    (10) row_exp -> . ROW SEP row_exp
    (11) row_exp -> . ROW RANGE ROW
    (14) row_exp -> . ROW
    (12) col_exp -> . COL SEP col_exp
    (13) col_exp -> . COL RANGE COL
    (15) col_exp -> . COL

    ROW             shift and go to state 13
    COL             shift and go to state 14

    row_exp                        shift and go to state 11
    col_exp                        shift and go to state 12

state 7

    (7) cols -> COL .

    SEP             reduce using rule 7 (cols -> COL .)
    $end            reduce using rule 7 (cols -> COL .)


state 8

    (1) expression -> range SEP . expression
    (1) expression -> . range SEP expression
    (2) expression -> . range
    (3) range -> . rows cols
    (4) range -> . rows
    (5) range -> . cols
    (6) rows -> . ROW
    (8) rows -> . LPAREN row_exp RPAREN
    (7) cols -> . COL
    (9) cols -> . LPAREN col_exp RPAREN

    ROW             shift and go to state 5
    LPAREN          shift and go to state 6
    COL             shift and go to state 7

    range                          shift and go to state 2
    expression                     shift and go to state 15
    rows                           shift and go to state 3
    cols                           shift and go to state 4

state 9

    (3) range -> rows cols .

    SEP             reduce using rule 3 (range -> rows cols .)
    $end            reduce using rule 3 (range -> rows cols .)


state 10

    (9) cols -> LPAREN . col_exp RPAREN
    (12) col_exp -> . COL SEP col_exp
    (13) col_exp -> . COL RANGE COL
    (15) col_exp -> . COL

    COL             shift and go to state 14

    col_exp                        shift and go to state 12

state 11

    (8) rows -> LPAREN row_exp . RPAREN

    RPAREN          shift and go to state 16


state 12

    (9) cols -> LPAREN col_exp . RPAREN

    RPAREN          shift and go to state 17


state 13

    (10) row_exp -> ROW . SEP row_exp
    (11) row_exp -> ROW . RANGE ROW
    (14) row_exp -> ROW .

    SEP             shift and go to state 18
    RANGE           shift and go to state 19
    RPAREN          reduce using rule 14 (row_exp -> ROW .)


state 14

    (12) col_exp -> COL . SEP col_exp
    (13) col_exp -> COL . RANGE COL
    (15) col_exp -> COL .

    SEP             shift and go to state 20
    RANGE           shift and go to state 21
    RPAREN          reduce using rule 15 (col_exp -> COL .)


state 15

    (1) expression -> range SEP expression .

    $end            reduce using rule 1 (expression -> range SEP expression .)


state 16

    (8) rows -> LPAREN row_exp RPAREN .

    COL             reduce using rule 8 (rows -> LPAREN row_exp RPAREN .)
    LPAREN          reduce using rule 8 (rows -> LPAREN row_exp RPAREN .)
    SEP             reduce using rule 8 (rows -> LPAREN row_exp RPAREN .)
    $end            reduce using rule 8 (rows -> LPAREN row_exp RPAREN .)


state 17

    (9) cols -> LPAREN col_exp RPAREN .

    SEP             reduce using rule 9 (cols -> LPAREN col_exp RPAREN .)
    $end            reduce using rule 9 (cols -> LPAREN col_exp RPAREN .)


state 18

    (10) row_exp -> ROW SEP . row_exp
    (10) row_exp -> . ROW SEP row_exp
    (11) row_exp -> . ROW RANGE ROW
    (14) row_exp -> . ROW

    ROW             shift and go to state 13

    row_exp                        shift and go to state 22

state 19

    (11) row_exp -> ROW RANGE . ROW

    ROW             shift and go to state 23


state 20

    (12) col_exp -> COL SEP . col_exp
    (12) col_exp -> . COL SEP col_exp
    (13) col_exp -> . COL RANGE COL
    (15) col_exp -> . COL

    COL             shift and go to state 14

    col_exp                        shift and go to state 24

state 21

    (13) col_exp -> COL RANGE . COL

    COL             shift and go to state 25


state 22

    (10) row_exp -> ROW SEP row_exp .

    RPAREN          reduce using rule 10 (row_exp -> ROW SEP row_exp .)


state 23

    (11) row_exp -> ROW RANGE ROW .

    RPAREN          reduce using rule 11 (row_exp -> ROW RANGE ROW .)


state 24

    (12) col_exp -> COL SEP col_exp .

    RPAREN          reduce using rule 12 (col_exp -> COL SEP col_exp .)


state 25

    (13) col_exp -> COL RANGE COL .

    RPAREN          reduce using rule 13 (col_exp -> COL RANGE COL .)

